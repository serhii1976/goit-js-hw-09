{"mappings":"iiBAAA,IAAAA,EAAAC,EAAA,SAMA,SAASC,EAAcC,G,IAAEC,EAAFD,EAAEE,SAAUC,EAAZH,EAAYI,MAC3BC,EAAgBC,KAAKC,SAAW,GACtB,IAAIC,SAAQ,SAACC,EAASC,GACpCC,YAAW,WACLN,GACFI,EAAQ,CAAEP,SAAAD,EAAUG,MAAAD,IAEtBO,EAAO,CAAER,SAAAD,EAAUG,MAAAD,MAClBA,MAIFS,MAAK,SAAAC,G,IAAGX,EAAQW,EAARX,SAAUE,EAAKS,EAALT,MACjBU,EAAAjB,GAASkB,OAAOC,QACd,uBAAwCC,OAAff,EAAS,QAAYe,OAANb,EAAM,MAC5C,CACAF,SAAU,qBAIfgB,OAAM,SAAAL,G,IAAGX,EAAQW,EAARX,SAAUE,EAAKS,EAALT,MAClBU,EAAAjB,GAASkB,OAAOI,QAAQ,sBAAqCF,OAAff,EAAS,QAAYe,OAANb,EAAM,MAAK,CACtEF,SAAU,sBA1BL,CACXkB,OAAQC,SAASC,cAAc,WAiD5BF,OAAOG,iBAAiB,UAnB7B,SAAsBC,GACpBA,EAAMC,iBACN,IAEuBC,EAAnBF,EAAMG,cADRC,SAAYxB,EAAKsB,EAALtB,MAAOyB,EAAIH,EAAJG,KAAMC,EAAMJ,EAANI,OAG3B,GAAI1B,EAAM2B,MAAQ,GAAKF,EAAKE,MAAQ,GAAKD,EAAOC,MAAQ,EACtD,OAAOjB,EAAAjB,GAASkB,OAAOI,QAAQ,4BAA6B,CAC1DjB,SAAU,eAGd,IAAK,IAAI8B,EAAI,EAAGA,EAAIF,EAAOC,MAAOC,GAAK,EAAG,CAIxCjC,EAAc,CAAEG,SAHC8B,EAAI,EAGK5B,MADxB6B,OAAOT,EAAMG,cAAcvB,MAAM2B,OAASE,OAAOJ,EAAKE,OAASC,Q","sources":["src/js/03-promises.js"],"sourcesContent":["import Notiflix from 'notiflix';\n\nconst refs = {\n  formEl: document.querySelector('.form'),\n};\n\nfunction createPromise({ position, delay }) {\n  const shouldResolve = Math.random() > 0.3;\n  const promise = new Promise((resolve, reject) => {\n    setTimeout(() => {\n      if (shouldResolve) {\n        resolve({ position, delay });\n      }\n      reject({ position, delay });\n    }, delay);\n  });\n\n  promise\n    .then(({ position, delay }) => {\n      Notiflix.Notify.success(\n        `✅ Fulfilled promise ${position} in ${delay}ms`,\n        {\n          position: 'center-center',\n        }\n      );\n    })\n    .catch(({ position, delay }) => {\n      Notiflix.Notify.failure(`❌ Rejected promise ${position} in ${delay}ms`, {\n        position: 'center-center',\n      });\n    });\n}\n\nfunction onFormSubmit(event) {\n  event.preventDefault();\n  const {\n    elements: { delay, step, amount },\n  } = event.currentTarget;\n\n  if (delay.value < 0 || step.value < 0 || amount.value < 0) {\n    return Notiflix.Notify.failure('enter the correct values!', {\n      position: 'center-top',\n    });\n  }\n  for (let i = 0; i < amount.value; i += 1) {\n    const position = i + 1;\n    const delay =\n      Number(event.currentTarget.delay.value) + Number(step.value) * i;\n    createPromise({ position, delay });\n  }\n}\n\nrefs.formEl.addEventListener('submit', onFormSubmit);\n"],"names":["$iU1Pc","parcelRequire","$ce04d3a99e08e73b$var$createPromise","param1","position1","position","delay1","delay","shouldResolve","Math","random","Promise","resolve","reject","setTimeout","then","param","$parcel$interopDefault","Notify","success","concat","catch","failure","formEl","document","querySelector","addEventListener","event","preventDefault","_elements","currentTarget","elements","step","amount","value","i","Number"],"version":3,"file":"03-promises.274dbf22.js.map"}