{"mappings":"qhBAAA,IAAAA,EAAAC,EAAA,SAMA,SAASC,GAAgBC,SAAAC,EAAUC,MAAAC,IACjC,MAAMC,EAAgBC,KAAKC,SAAW,GACtB,IAAIC,SAAQ,CAACC,EAASC,KACpCC,YAAW,KACLN,GACFI,EAAQ,CAAER,SAAAC,EAAUC,MAAAC,IAEtBM,EAAO,CAAET,SAAAC,EAAUC,MAAAC,MAClBA,MAIFQ,MAAK,EAACX,SAAEA,EAAQE,MAAEA,MACjBU,EAAAf,GAASgB,OAAOC,QACd,uBAAqBd,QAAiBE,MAAW,CAE/CF,SAAU,qBAIfe,OAAM,EAACf,SAAEA,EAAQE,MAAEA,MAClBU,EAAAf,GAASgB,OAAOG,QAAQ,sBAAoBhB,QAAeE,MAAW,CACpEF,SAAU,sBA1BL,CACXiB,OAAQC,SAASC,cAAc,WAiD5BF,OAAOG,iBAAiB,UAnB7B,SAAsBC,GACpBA,EAAMC,iBACN,MACEC,UAAUrB,MAAEA,EAAKsB,KAAEA,EAAIC,OAAEA,IACvBJ,EAAMK,cAEV,GAAIxB,EAAMyB,MAAQ,GAAKH,EAAKG,MAAQ,GAAKF,EAAOE,MAAQ,EACtD,OAAOf,EAAAf,GAASgB,OAAOG,QAAQ,4BAA6B,CAC1DhB,SAAU,eAGd,IAAK,IAAI4B,EAAI,EAAGA,EAAIH,EAAOE,MAAOC,GAAK,EAAG,CAIxC7B,EAAc,C,SAHG6B,EAAI,E,MAEnBC,OAAOR,EAAMK,cAAcxB,MAAMyB,OAASE,OAAOL,EAAKG,OAASC","sources":["src/js/03-promises.js"],"sourcesContent":["import Notiflix from 'notiflix';\n\nconst refs = {\n  formEl: document.querySelector('.form'),\n};\n\nfunction createPromise({ position, delay }) {\n  const shouldResolve = Math.random() > 0.3;\n  const promise = new Promise((resolve, reject) => {\n    setTimeout(() => {\n      if (shouldResolve) {\n        resolve({ position, delay });\n      }\n      reject({ position, delay });\n    }, delay);\n  });\n\n  promise\n    .then(({ position, delay }) => {\n      Notiflix.Notify.success(\n        `✅ Fulfilled promise ${position} in ${delay}ms`,\n        {\n          position: 'center-center',\n        }\n      );\n    })\n    .catch(({ position, delay }) => {\n      Notiflix.Notify.failure(`❌ Rejected promise ${position} in ${delay}ms`, {\n        position: 'center-center',\n      });\n    });\n}\n\nfunction onFormSubmit(event) {\n  event.preventDefault();\n  const {\n    elements: { delay, step, amount },\n  } = event.currentTarget;\n\n  if (delay.value < 0 || step.value < 0 || amount.value < 0) {\n    return Notiflix.Notify.failure('enter the correct values!', {\n      position: 'center-top',\n    });\n  }\n  for (let i = 0; i < amount.value; i += 1) {\n    const position = i + 1;\n    const delay =\n      Number(event.currentTarget.delay.value) + Number(step.value) * i;\n    createPromise({ position, delay });\n  }\n}\n\nrefs.formEl.addEventListener('submit', onFormSubmit);\n"],"names":["$eWCmQ","parcelRequire","$47d4ff9957288465$var$createPromise","position","position1","delay","delay1","shouldResolve","Math","random","Promise","resolve","reject","setTimeout","then","$parcel$interopDefault","Notify","success","catch","failure","formEl","document","querySelector","addEventListener","event","preventDefault","elements","step","amount","currentTarget","value","i","Number"],"version":3,"file":"03-promises.f3965c5e.js.map"}